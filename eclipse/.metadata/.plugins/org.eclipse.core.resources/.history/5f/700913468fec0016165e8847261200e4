package escapemc.module.modules;

import org.lwjgl.input.Keyboard;

import escapemc.Util.RenderUtils;
import escapemc.module.Category;
import escapemc.module.Module;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.monster.EntityMob;
import net.minecraft.entity.passive.EntityAnimal;
import net.minecraft.entity.player.EntityPlayer;

public class Tracers extends Module {

	public Tracers() {
	
		super("Tracers", Keyboard.KEY_M, Category.Gui);

	}
	
	public void onEnable() {
					
		for(Object o : (mc.theWorld.loadedEntityList)) {
		
		EntityLivingBase entity = (EntityLivingBase) o;
			
		if(!(o instanceof EntityPlayerSP) && o instanceof EntityLivingBase && (!entity.isDead) && entity.getEntityId()< 1000000000) {
							
			if(entity instanceof EntityPlayer) {
				
				if(entity != mc.thePlayer) 
					player(entity);
				}

			if(entity instanceof EntityMob) {
					
					mob(entity);

			}
				
			if(entity instanceof EntityAnimal) {
					
					mob(entity);
				}
				
			passive(entity);
			
		}
	}		
}					
	

	public void player(EntityLivingBase entity) {
		
		float red = 1F;
		float green = 0.5F;
		float blue = 0.5F;
		
		double xPos = (entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosX);
		double yPos = (entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosY);
		double zPos = (entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosZ);

		render(red, green, blue, xPos, yPos, zPos);
		
	}

	public void mob(EntityLivingBase entity) {
		
		float red = 1F;
		float green = 0.5F;
		float blue = 1F;
		
		double xPos = (entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosX);
		double yPos = (entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosY);
		double zPos = (entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosZ);

		render(red, green, blue, xPos, yPos, zPos);
		
	}
	
	public void animal(EntityLivingBase entity) {
		
		float red = 0.5F;
		float green = 1F;
		float blue = 0.5F;
		
		double xPos = (entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosX);
		double yPos = (entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosY);
		double zPos = (entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosZ);

		render(red, green, blue, xPos, yPos, zPos);
		
	}
	
	public void passive(EntityLivingBase entity) {
		
		float red = 0.5F;
		float green = 0.5F;
		float blue = 0.5F;
		
		double xPos = (entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosX);
		double yPos = (entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosY);
		double zPos = (entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * mc.timer.renderPartialTicks - mc.getRenderManager().renderPosZ);

		render(red, green, blue, xPos, yPos, zPos);
		
	}

	
	public void render(float red, float green, float blue, double x, double y, double z) {
		
		RenderUtils.drawTracerLine(x, y, z, red, green, blue, 0.45F, 2F);
		
	}
	
}
