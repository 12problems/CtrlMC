package escapemc.Command.commands;

import escapemc.Command.Command;
import escapemc.Util.ChatUtil;
import escapemc.module.KillAuraMode;
import escapemc.module.Module;
import escapemc.module.ModuleManager;
import escapemc.module.modules.Killaura;

public class CommandModeSwitch extends Command {

	@Override
	public String getName() {
		
		return "mode";
		
	}

	@Override
	public String getDescription() {
		
		return "Switches mode (if any) for the module.";
		
	}

	@Override
	public String getSyntax() {
		
		return "-mode [MOD]";
		
	}

	@Override
	public void onCommand(String command, String[] args) throws Exception {

		try{
			for(Module m : ModuleManager.getModules()) {
			
				if(m.getName().equalsIgnoreCase(args[1])) {
					
					if(m.getMode() == KillAuraMode.SWORD) {
						m.setKam(KillAuraMode.AXE);
						ChatUtil.SendChatMessage("Changed the mode §aof " + m.getName() + ".");
						ChatUtil.SendChatMessage("§bNote, §athe §aonly §aMods §athat §ahave §akeybinds §aare:");
						ChatUtil.SendChatMessage("§cKillaura §a(Axe and Sword)");
						break;
					}
					if(m.getMode() == KillAuraMode.AXE) {
						m.setKam(KillAuraMode.SWORD);
						ChatUtil.SendChatMessage("Changed the mode §aof " + m.getName() + ".");
						ChatUtil.SendChatMessage("§bNote, §athe §aonly §aMods §athat §ahave §akeybinds §aare:");
						ChatUtil.SendChatMessage("§cKillaura §a(Axe and Sword)");
						break;
					}
					if(m.getMode() == null) {
						
						ChatUtil.SendChatMessage("There are no modes for " + m.getName());
						ChatUtil.SendChatMessage("§bThere are §bonly §bmodes §bhave §bkeybinds §bfor:");
						ChatUtil.SendChatMessage("§cKillaura §a(Axe and Sword)");
						break;
						
						
					}
				}
			}
		} catch(Exception e) {
		ChatUtil.SendChatMessage("Fuck, my code didn't work because §aof §ayour §ashitty §acommand.");
		}
	}
}
