package escapemc.modules;

import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.math.MathHelper;

public class Killaura {

	public static float[] getRotationsNeeded(Entity entity)
	{
		if(entity == null)
			return null;
		double diffX = entity.posX - Minecraft.getMinecraft().thePlayer.posX;
		double diffY;
		if(entity instanceof EntityLivingBase)
		{
			EntityLivingBase entityLivingBase = (EntityLivingBase)entity;
			diffY =
				entityLivingBase.posY
					+ entityLivingBase.getEyeHeight()
					* 0.9
					- (Minecraft.getMinecraft().thePlayer.posY + Minecraft
						.getMinecraft().thePlayer.getEyeHeight());
		}else
			diffY =
				(entity.boundingBox.minY + entity.boundingBox.maxY)
					/ 2.0D
					- (Minecraft.getMinecraft().thePlayer.posY + Minecraft
						.getMinecraft().thePlayer.getEyeHeight());
		double diffZ = entity.posZ - Minecraft.getMinecraft().thePlayer.posZ;
		double dist = MathHelper.sqrt_double(diffX * diffX + diffZ * diffZ);
		float yaw =
			(float)(Math.atan2(diffZ, diffX) * 180.0D / Math.PI) - 90.0F;
		float pitch = (float)-(Math.atan2(diffY, dist) * 180.0D / Math.PI);
		return new float[]{
			Minecraft.getMinecraft().thePlayer.rotationYaw
				+ MathHelper.wrapAngleTo180_float(yaw
					- Minecraft.getMinecraft().thePlayer.rotationYaw),
			Minecraft.getMinecraft().thePlayer.rotationPitch
				+ MathHelper.wrapAngleTo180_float(pitch
					- Minecraft.getMinecraft().thePlayer.rotationPitch)};
		
	}
	
	public static void faceEntity(EntityLivingBase entity)
	  {
		float[] rotations = RotationUtils.getRotations(entity);
	    if (rotations != null)
	    {
	    	Minecraft.getMinecraft().thePlayer.rotationYaw = rotations[0];
	    	Minecraft.getMinecraft().thePlayer.rotationPitch = rotations[1] +8;
	    }
	  }


}
